1. Сервер с базовыми эндпоинтами и авторизацией, создание пользовательской сессии
    a. Регистрация  
    b. Аутентификация - С помощью куки которая создает сессию максимум на час.
    c. Получение данных с клиента - карты и пароли по своим моделям, у каждого вида своя таблица в бд.
    d. Отправка данных на клиент - данные расшифровываются на сервере и отправляются в оригинальном виде на клиент.
    e. Bcrypt для хранения паролей
    f. Определиться с метаданными - дата создания, изменения, название, тип, id статичный, id который меняется при каждом изменении объекта на сервере
    g. read, write, delete, list - список необходимых команд которые должны выполняться сервером
    h. HTTP - протокол взаимодействия

    насколько можно ограничить размер произвольных данных? 2МБ
    

2. Клиент с базовыми командами
    a. Регистрация и авторизация
    b. Отправка данных
    c. Синхронизация данных клиента с сервером
    d. Просмотр данных
    e. read, write, delete, list - список необходимых команд которые должны выполняться сервером
    f. Read only при потере соеденения, у произвольных данных только метаданные

    как должны выглядить поля заполнения паролей и данных карт?
    насколько не удобным может быть "интерфейс"?
    насколько плохо произвольные данные хранить в виде файлов? 

3. Проработка сценариев с несколькими клиентами
    a. Подключение с другого устройства и синхронизация данных 
        - синхронизация, по сути, загрузка того что есть на сервере и сравнение дат последних изменений объектов, если на сервере новее - грузим с сервера
        - у произвольных данных синхронизировать метаданные, контент загружать по запросу
    b. Клиенты для Linux, Windows и MacOs



4. Шифрование на сервере данных
    a. мастер ключ, который шифрует ключ шифрования
    b. каждый объект тоже шифруется, но не его метаданные, у каждого объекта свой ключ, который шифруется общим ключем шифрования.
    c. все ключи хранятся только на сервере

    мастер ключ -> ключ шифрования -> ключи объектов данных


5. Возможность хранения произвольных данных
    a. Сегментированная загрузка

6. Тестирование и документация



Сделать проверку чтобы не было одинаковых имен у данных у одного пользователя.